{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbookpro/Desktop/JEANNO%20EXTERNAL%20ZONE/DEV%20FREELANCE/intel-hackaton-challenge-2/src/pages/_document.js"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\r\n\r\nexport default function Document() {\r\n    return (\r\n        <Html lang=\"en\">\r\n            <Head />\r\n            <body className=\"antialiased\">\r\n                <Main />\r\n                <NextScript />\r\n            </body>\r\n        </Html>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACpB,qBACI,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACP,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;gBAAK,WAAU;;kCACZ,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAI3B"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbookpro/Desktop/JEANNO%20EXTERNAL%20ZONE/DEV%20FREELANCE/intel-hackaton-challenge-2/src/pages/_app.js"],"sourcesContent":["// import \"@/styles/globals.css\";\r\nimport \"../styles/globals.css\";\r\n\r\nexport default function App({ Component, pageProps }) {\r\n  return <Component {...pageProps} />;\r\n}\r\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;;;;AAGlB,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE;IAClD,qBAAO,qKAAC;QAAW,GAAG,SAAS;;;;;;AACjC"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbookpro/Desktop/JEANNO%20EXTERNAL%20ZONE/DEV%20FREELANCE/intel-hackaton-challenge-2/src/hooks/useAxios.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n  timeout: 30000,\r\n});\r\n"],"names":[],"mappings":";;;AAAA;;;;;;AAEO,MAAM,WAAW,0GAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACnC,SAAS;AACX"}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbookpro/Desktop/JEANNO%20EXTERNAL%20ZONE/DEV%20FREELANCE/intel-hackaton-challenge-2/src/hooks/useGenerateText.js"],"sourcesContent":["// import generateText from \"@/api/useLlava\";\r\nimport { instance } from \"./useAxios\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function useGenerateText() {\r\n  const [description, setDescription] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const generate = async (query) => {\r\n    try {\r\n      setLoading(true);\r\n      const inputs = `generate a cool and short description for a brand. The brand name is: waterbeer. The slogan is: Water, the source of life. Beer too!. The keywords are: #beer #taste. add the keyword at the end of the description.`;\r\n      const testPrompt = `generate a cool and short description for a brand. The intention of the post is: {${query}}. Add related hashtag at the end too`;\r\n      const res = await instance.post(\"/api/llavaText/\", { query: testPrompt });\r\n      const data = res.data;\r\n      const parsedData = data.replace(/\\s+/g, \" \").trim();\r\n      console.log(parsedData);\r\n      setDescription(parsedData);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setError(\"An unknown error has occured. Please try later.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    description,\r\n    generate,\r\n    loading,\r\n    error,\r\n  };\r\n}\r\n"],"names":[],"mappings":"AAAA,6CAA6C;;;;AAC7C;AACA;;;;;;;AAEe,SAAS;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,WAAW,OAAO;QACtB,IAAI;YACF,WAAW;YACX,MAAM,SAAS,CAAC,oNAAoN,CAAC;YACrO,MAAM,aAAa,CAAC,kFAAkF,EAAE,MAAM,qCAAqC,CAAC;YACpJ,MAAM,MAAM,MAAM,iHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,mBAAmB;gBAAE,OAAO;YAAW;YACvE,MAAM,OAAO,IAAI,IAAI;YACrB,MAAM,aAAa,KAAK,OAAO,CAAC,QAAQ,KAAK,IAAI;YACjD,QAAQ,GAAG,CAAC;YACZ,eAAe;QACjB,EAAE,OAAO,OAAO;YACd,QAAQ,GAAG,CAAC;YACZ,SAAS;QACX,SAAU;YACR,WAAW;QACb;IACF;IAEA,OAAO;QACL;QACA;QACA;QACA;IACF;AACF"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbookpro/Desktop/JEANNO%20EXTERNAL%20ZONE/DEV%20FREELANCE/intel-hackaton-challenge-2/src/hooks/useGenerateImage.js"],"sourcesContent":["// import generateText from \"@/api/useLlava\";\r\nimport { instance } from \"./useAxios\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function useGenerateImage() {\r\n    const [url, setUrl] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    const generate = async (query) => {\r\n        try {\r\n            setLoading(true);\r\n            const prompt = `A social media post  with this description: {${query}}`;\r\n            const res = await instance.post(\"/api/sdxlImage/\", { prompt });\r\n            if (res.data?.base64String) {\r\n                setUrl(`data:image/png;base64,${res.data?.base64String}`);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            setError(\"An unknown error has occured. Please try later.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return {\r\n        url,\r\n        generate,\r\n        loading,\r\n        error,\r\n    };\r\n}\r\n"],"names":[],"mappings":"AAAA,6CAA6C;;;;AAC7C;AACA;;;;;;;AAEe,SAAS;IACpB,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAC/B,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,WAAW,OAAO;QACpB,IAAI;YACA,WAAW;YACX,MAAM,SAAS,CAAC,6CAA6C,EAAE,MAAM,CAAC,CAAC;YACvE,MAAM,MAAM,MAAM,iHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,mBAAmB;gBAAE;YAAO;YAC5D,IAAI,IAAI,IAAI,EAAE,cAAc;gBACxB,OAAO,CAAC,sBAAsB,EAAE,IAAI,IAAI,EAAE,cAAc;YAC5D;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;YACZ,SAAS;QACb,SAAU;YACN,WAAW;QACf;IACJ;IAEA,OAAO;QACH;QACA;QACA;QACA;IACJ;AACJ"}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbookpro/Desktop/JEANNO%20EXTERNAL%20ZONE/DEV%20FREELANCE/intel-hackaton-challenge-2/src/hooks/useDownloadImage.js"],"sourcesContent":["\nconst UseDownloadImage = (img = '') => {\n    const downloadImg = () => {\n        const link = document.createElement('a'); // Crée un élément de lien\n        link.href = img; // Associe l'URL de l'image à ce lien\n        link.download = img.split('/').pop(); // Utilise le nom du fichier comme nom pour le téléchargement\n        link.click(); // Simule un clic sur le lien pour télécharger l'image\n    };\n    return { downloadImg };\n};\n\nexport default UseDownloadImage;\n"],"names":[],"mappings":";;;AACA,MAAM,mBAAmB,CAAC,MAAM,EAAE;IAC9B,MAAM,cAAc;QAChB,MAAM,OAAO,SAAS,aAAa,CAAC,MAAM,0BAA0B;QACpE,KAAK,IAAI,GAAG,KAAK,qCAAqC;QACtD,KAAK,QAAQ,GAAG,IAAI,KAAK,CAAC,KAAK,GAAG,IAAI,6DAA6D;QACnG,KAAK,KAAK,IAAI,sDAAsD;IACxE;IACA,OAAO;QAAE;IAAY;AACzB;uCAEe"}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbookpro/Desktop/JEANNO%20EXTERNAL%20ZONE/DEV%20FREELANCE/intel-hackaton-challenge-2/src/pages/index.js"],"sourcesContent":["// import { Button } from \"../components/ui/button\";\r\n// import { Input } from \"../components/ui/input\";\r\n// import { Loader2 } from \"lucide-react\";\r\nimport useGenerateText from \"../hooks/useGenerateText\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport useGenerateImage from \"../hooks/useGenerateImage\";\r\nimport UseDownloadImage from \"../hooks/useDownloadImage\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nexport default function Home() {\r\n    const { register, handleSubmit } = useForm();\r\n    const { generate: generateText, description, loading } = useGenerateText();\r\n    const {\r\n        generate: generateImage,\r\n        url,\r\n        loading: loadingImage,\r\n    } = useGenerateImage();\r\n\r\n    const onSubmit = (values) => {\r\n        console.log(values);\r\n        generateText(values.query);\r\n        generateImage(values.query);\r\n    };\r\n\r\n\r\n// UPLOAD FILE IMG\r\n    const [imageSrc, setImageSrc] = useState('emploi.png');\r\n    const handleImageUpload = (event) => {\r\n        const file = event.target.files[0];  // Récupère le premier fichier\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            // Dès que le fichier est chargé, on met à jour l'état pour afficher l'image\r\n            reader.onloadend = () => {\r\n                setImageSrc(reader.result);\r\n            };\r\n            // Lire le fichier en tant qu'URL de données\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n    const { downloadImg } = UseDownloadImage(imageSrc);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"w-100\">\r\n                <h1 className=\"inp-label\">Veuillez charger ici l'image</h1>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    {/* Input pour choisir le fichier image */}\r\n                    <input\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        onChange={handleImageUpload}\r\n                        className=\"form-control ms-2\"\r\n                    />\r\n                </form>\r\n                {description && <p className=\"mt-4\">{description}</p>}\r\n            </div>\r\n\r\n            <div\r\n                className={\r\n                    \"vh-90 w-full bg-white flex flex-col items-center justify-center\"\r\n                }\r\n            >\r\n                <div className=\"image-download-tester\">\r\n                    <h1 className=\"title\">Télécharger une image</h1>\r\n\r\n                    {imageSrc && (\r\n                        <div>\r\n                            <img\r\n                                src={imageSrc}\r\n                                alt=\"Image download\"\r\n                                style={{ width: '350px', cursor: 'pointer' }}\r\n                                onClick={downloadImg}\r\n                            />\r\n                        </div>\r\n                    )}\r\n\r\n                    <p>Cliquez sur l'image pour la télécharger.</p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":"AAAA,oDAAoD;AACpD,kDAAkD;AAClD,0CAA0C;;;;;AAC1C;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AAEe,SAAS;IACpB,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,0IAAA,CAAA,UAAO,AAAD;IACzC,MAAM,EAAE,UAAU,YAAY,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,wHAAA,CAAA,UAAe,AAAD;IACvE,MAAM,EACF,UAAU,aAAa,EACvB,GAAG,EACH,SAAS,YAAY,EACxB,GAAG,CAAA,GAAA,yHAAA,CAAA,UAAgB,AAAD;IAEnB,MAAM,WAAW,CAAC;QACd,QAAQ,GAAG,CAAC;QACZ,aAAa,OAAO,KAAK;QACzB,cAAc,OAAO,KAAK;IAC9B;IAGJ,kBAAkB;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,oBAAoB,CAAC;QACvB,MAAM,OAAO,MAAM,MAAM,CAAC,KAAK,CAAC,EAAE,EAAG,8BAA8B;QACnE,IAAI,MAAM;YACN,MAAM,SAAS,IAAI;YACnB,4EAA4E;YAC5E,OAAO,SAAS,GAAG;gBACf,YAAY,OAAO,MAAM;YAC7B;YACA,4CAA4C;YAC5C,OAAO,aAAa,CAAC;QACzB;IACJ;IACA,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,yHAAA,CAAA,UAAgB,AAAD,EAAE;IAEzC,qBACI,qKAAC;;0BACG,qKAAC;gBAAI,WAAU;;kCACX,qKAAC;wBAAG,WAAU;kCAAY;;;;;;kCAC1B,qKAAC;wBAAK,UAAU,aAAa;kCAEzB,cAAA,qKAAC;4BACG,MAAK;4BACL,QAAO;4BACP,UAAU;4BACV,WAAU;;;;;;;;;;;oBAGjB,6BAAe,qKAAC;wBAAE,WAAU;kCAAQ;;;;;;;;;;;;0BAGzC,qKAAC;gBACG,WACI;0BAGJ,cAAA,qKAAC;oBAAI,WAAU;;sCACX,qKAAC;4BAAG,WAAU;sCAAQ;;;;;;wBAErB,0BACG,qKAAC;sCACG,cAAA,qKAAC;gCACG,KAAK;gCACL,KAAI;gCACJ,OAAO;oCAAE,OAAO;oCAAS,QAAQ;gCAAU;gCAC3C,SAAS;;;;;;;;;;;sCAKrB,qKAAC;sCAAE;;;;;;;;;;;;;;;;;;;;;;;AAMvB"}},
    {"offset": {"line": 430, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}